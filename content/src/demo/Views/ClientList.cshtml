<!--
  Turnstone Biologics Confidential
  
  2018 Turnstone Biologics, Inc.
  All Rights Reserved.
  
  This file is subject to the terms and conditions defined in
  file 'license.txt', which is part of this source code package.
   
  Contributors :
        Turnstone Biologics - General Release
-->


<html>

	<head>
  		<meta charset="utf-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="cache-control" content="no-cache" />
		<link href="http://code.jquery.com/ui/1.12.1/themes/cupertino/jquery-ui.css" rel="stylesheet" type="text/css"/>
		<link href="../css/ui.jqgrid.css" rel="stylesheet" type="text/css"/>
		<style>
			.ui-jqgrid tr.jqgrow td,
			.ui-jqgrid th {
				font-size:0.8em
			}
		</style> 
	</head>
	
<!-- commmon javascripts -->
<script type="text/javascript" src="../js/jquery.jqGrid.min.js"/>
<script type="text/javascript" src="../js/jquery.jqGrid.src.js"/>
<script type="text/javascript" src="../js/dual-list-box.min.js"/>

<!-- script execution -->
<script type="text/javascript">

	// *************************************************************
	// event handler for a grid refresh forces a re-populate 
	// *************************************************************
 	$( document ).on('refreshClientGrid', function() {
        populateClientGrid();
    });

	// *************************************************************
	// execution on document (page) preparation
	// *************************************************************
	$( document ).ready(function()
	{
		$('#selectForClient').DualListBox();
		
		var rowNum, height;
		var caption = '';
		var modelUrl = '@Html.Raw(ViewData["modelUrl"])';
		
		console.log( 'modelUrl is ' + modelUrl );
		
		// if the the modelUrl is not provided, load all Client models
		if ( modelUrl == null || modelUrl == 'null' || modelUrl == '' )
		{
			caption 	= 'Client List';
			modelUrl 	= '/Client/loadAll';
			rowNum		= 20;
			height		= 280; 
		}
		else	// only show 5 rows with a minimal height, and display the multi-select button option
		{
			rowNum		= 5;
			height		= 100;
			$('#dualListButtonForClientDivId').show(); 
		}
			
		// *************************************************************				
		// prepare the Client grid
		// *************************************************************			
        var grid = jQuery("#ClientGridTableId");
        grid.jqGrid({
        	url: modelUrl,
			datatype: "json",
																										    																				    						colNames:[ 'Client Id','Id','Name', ],
   			colModel:[ {name:'clientId',index:'clientId',hidden:true},{name:'id',index:'id',align:'center'},{name:'name',index:'name',align:'center'}, ],
   			loadtext: "Loading Client List",
			altRows:true,
			sortable:true,
			autowidth:true,
			shrinkToFit : true,
			multiselect:true,
		    viewrecords:false,
		    gridview:true,
			pginput:false,
			pgbuttons:false,
			viewrecord:false,
		    rowNum:rowNum,
		    height:height,
		    rownumbers:true,
		    hidegrid:true,
		    caption: caption
		}); 
		
		// populate the grid
		populateClientGrid();
	});

	// *************************************************************
	// double click event handler on a grid item to force an edit 
	// event on a Client model
	// *************************************************************
	jQuery('#ClientGridTableId').dblclick(function () 
	{
		editClient();
	}); 			    

	// *************************************************************
	// display the inspection dialog embedded with the 
	// Client form in creation mode
	// ************************************************************* 
	function addClient()
	{
		var title = "Add New Client";
		var url	= '@Html.Raw(ViewData["addUrl"])';		
		var parentUrl = '@Html.Raw(ViewData["parentUrl"])';
		var eventToFire = "refreshClientGrid";
		
		if( url == null || url == 'null' || url == '' )
			url = "/Client/Profile?action=create";
		else // append the parent if there is an addUrl provided
			url = url + "&parentUrl=" + parentUrl;
			
		inspectionDialog( title, url, eventToFire );
	}

	// *************************************************************
	// display the inspection dialog embedded with the Client 
	// form in edit mode
	// *************************************************************
	function editClient()
	{
		var id 	= getSelectedIdFromGrid( jQuery('#ClientGridTableId'), 'clientId' );
	
		if ( id != null )
		{
			var title = "Edit Client";
			var url = '/Client/Profile?action=edit&clientId=' + id;
			
			var eventToFire = "refreshClientGrid";
			
			inspectionDialog( title, url, eventToFire );
		}
		else
		{
			BootstrapDialog.alert('Please first select a Client');
		}	
	}
	
	// *************************************************************
	// upon confirmation, call a Client controller via .ajax 
	// to delete one or more Client models
	// *************************************************************
	function deleteClient()
	{
		var ids 	= getSelectedIdsFromGrid( jQuery('#ClientGridTableId'), 'clientId' );
		if ( ids == null )
		{
			BootstrapDialog.alert('Please first select a Client');
		}
		else
		{
	    	BootstrapDialog.confirm
	    	({
	        	title: 'WARNING',
	        	message: 'Are you sure?',
	            type: BootstrapDialog.TYPE_WARNING, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
	            closable: true, // <-- Default value is false
	            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
	            btnOKLabel: 'Yes', // <-- Default value is 'OK',
	            btnOKClass: 'btn-warning', // <-- If you didn't specify it, dialog type will be used,
	            callback: function(result) 
	            {
	                // result will be true if button was click, while it will be false if 
	                // users close the dialog directly.
	                if(result) 
	                {
	                	var url = '@Html.Raw(ViewData["deleteUrl"])';
	                	
	                	if ( url == null || url == '' || url == 'null' )
	                		url = '/Client/delete?a=a';
	                	
	                	for (i = 0; i < ids.length; i++)
	                	{
	                		url = url + '&childIds=' + ids[i];
	                	}

						console.log( 'delete url is ' + url );
	                							
						jQuery.ajax(
						{
					  		url: url,
					  		dataType: 'json',
						}).always(function( data ) 
						{
							populateClientGrid()
						});		
	                }
	            }
	    	});
	    }
	}

	// *************************************************************
	// handles calling the multi-select screen, providing details
	// on both the source list and the receiver list
	// *************************************************************
	function addClientFromAllList()
	{
		var sourceUrl	= '/Client/loadAll';
		var modelUrl 	= '@Html.Raw(ViewData["modelUrl"])';
		var value 		= 'clientId';
		var text 		= 'name';
		var roleName	= '@Html.Raw(ViewData["roleName"])';
		
		if ( roleName == null || roleName == 'null' || roleName == null )
			roleName = 'All-Client';
			
		multiselect( sourceUrl, modelUrl, roleName, value, text, assignClientSelectionsFromAllList );  
	}

	// *************************************************************
	// helper function to assign the provided children ids to the
	// Client as the parent
	// *************************************************************
	function assignClientSelectionsFromAllList( ids )
	{
		var url = '@Html.Raw(ViewData["parentUrl"])';
		for (i = 0; i < ids.length; i++)
    	{
    		url = url + '&childIds=' + ids[i];
    	}
				
		jQuery.ajax(
		{
	  		url: url,
	  		dataType: 'json',
		}).always(function( data ) 
		{
			populateClientGrid()
		});		
	}
	
	// *************************************************************
	// populate the grid triggering a reload event
	// *************************************************************
	function populateClientGrid()
	{
		$('#loadingDivId').show();
		$('#ClientGridTableId').trigger( 'reloadGrid' );
		$('#loadingDivId').hide();			
	}
	
</script>

<!-- grid table declaration -->
<table id="ClientGridTableId"></table>

<div>
  <br>
  <table
    <tr>
      <td>
      
        <!-- grid refresh button -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="refresh" onclick="populateClientGrid()" >
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-refresh">
		      </span>
			</button>
		</a>
		
		<!-- button to add a new Client model -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="add Client" onclick="addClient()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-plus">
		      </span>
			</button>
		</a>
		
		<!-- button to edit a selected Client model -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="edit Client" onclick="editClient()" >
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-pencil">
		      </span>
			</button>
		</a>
		
		<!-- button to delete one or more selected Client models -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="delete Client" onclick="deleteClient()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-trash">
		      </span>
			</button>
		</a>
	  </td>
	  <td>
	  	<!-- button to add one or more existing Client models -->
		<div id="dualListButtonForClientDivId" style="display:none">
		  <a href="#" data-toggle="tooltip" data-placement="below" title="add Client From List" onclick="addClientFromAllList()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-th-list">
		      </span>
			</button>
		  </a>
		<div>
 	  </td>
 	</tr>
  </table>

  <!-- the indicator that the grid's contents are loading -->
  <div id="loadingDivId" style="display:none;color:black">
    loading all Client entities...<image src="../img/load_new.gif" width=48 height=48/>
  </div>
  				  				  
</div>

</html>