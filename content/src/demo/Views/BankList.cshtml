<!--
  Turnstone Biologics Confidential
  
  2018 Turnstone Biologics, Inc.
  All Rights Reserved.
  
  This file is subject to the terms and conditions defined in
  file 'license.txt', which is part of this source code package.
   
  Contributors :
        Turnstone Biologics - General Release
-->


<html>

	<head>
  		<meta charset="utf-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="cache-control" content="no-cache" />
		<link href="http://code.jquery.com/ui/1.12.1/themes/cupertino/jquery-ui.css" rel="stylesheet" type="text/css"/>
		<link href="../css/ui.jqgrid.css" rel="stylesheet" type="text/css"/>
		<style>
			.ui-jqgrid tr.jqgrow td,
			.ui-jqgrid th {
				font-size:0.8em
			}
		</style> 
	</head>
	
<!-- commmon javascripts -->
<script type="text/javascript" src="../js/jquery.jqGrid.min.js"/>
<script type="text/javascript" src="../js/jquery.jqGrid.src.js"/>
<script type="text/javascript" src="../js/dual-list-box.min.js"/>

<!-- script execution -->
<script type="text/javascript">

	// *************************************************************
	// event handler for a grid refresh forces a re-populate 
	// *************************************************************
 	$( document ).on('refreshBankGrid', function() {
        populateBankGrid();
    });

	// *************************************************************
	// execution on document (page) preparation
	// *************************************************************
	$( document ).ready(function()
	{
		$('#selectForBank').DualListBox();
		
		var rowNum, height;
		var caption = '';
		var modelUrl = '@Html.Raw(ViewData["modelUrl"])';
		
		console.log( 'modelUrl is ' + modelUrl );
		
		// if the the modelUrl is not provided, load all Bank models
		if ( modelUrl == null || modelUrl == 'null' || modelUrl == '' )
		{
			caption 	= 'Bank List';
			modelUrl 	= '/Bank/loadAll';
			rowNum		= 20;
			height		= 280; 
		}
		else	// only show 5 rows with a minimal height, and display the multi-select button option
		{
			rowNum		= 5;
			height		= 100;
			$('#dualListButtonForBankDivId').show(); 
		}
			
		// *************************************************************				
		// prepare the Bank grid
		// *************************************************************			
        var grid = jQuery("#BankGridTableId");
        grid.jqGrid({
        	url: modelUrl,
			datatype: "json",
																										    																				    																				    						colNames:[ 'Bank Id','Accounts','Converter','Cons', ],
   			colModel:[ {name:'bankId',index:'bankId',hidden:true},{name:'accounts',index:'accounts',align:'center'},{name:'converter',index:'converter',align:'center'},{name:'cons',index:'cons',align:'center'}, ],
   			loadtext: "Loading Bank List",
			altRows:true,
			sortable:true,
			autowidth:true,
			shrinkToFit : true,
			multiselect:true,
		    viewrecords:false,
		    gridview:true,
			pginput:false,
			pgbuttons:false,
			viewrecord:false,
		    rowNum:rowNum,
		    height:height,
		    rownumbers:true,
		    hidegrid:true,
		    caption: caption
		}); 
		
		// populate the grid
		populateBankGrid();
	});

	// *************************************************************
	// double click event handler on a grid item to force an edit 
	// event on a Bank model
	// *************************************************************
	jQuery('#BankGridTableId').dblclick(function () 
	{
		editBank();
	}); 			    

	// *************************************************************
	// display the inspection dialog embedded with the 
	// Bank form in creation mode
	// ************************************************************* 
	function addBank()
	{
		var title = "Add New Bank";
		var url	= '@Html.Raw(ViewData["addUrl"])';		
		var parentUrl = '@Html.Raw(ViewData["parentUrl"])';
		var eventToFire = "refreshBankGrid";
		
		if( url == null || url == 'null' || url == '' )
			url = "/Bank/Profile?action=create";
		else // append the parent if there is an addUrl provided
			url = url + "&parentUrl=" + parentUrl;
			
		inspectionDialog( title, url, eventToFire );
	}

	// *************************************************************
	// display the inspection dialog embedded with the Bank 
	// form in edit mode
	// *************************************************************
	function editBank()
	{
		var id 	= getSelectedIdFromGrid( jQuery('#BankGridTableId'), 'bankId' );
	
		if ( id != null )
		{
			var title = "Edit Bank";
			var url = '/Bank/Profile?action=edit&bankId=' + id;
			
			var eventToFire = "refreshBankGrid";
			
			inspectionDialog( title, url, eventToFire );
		}
		else
		{
			BootstrapDialog.alert('Please first select a Bank');
		}	
	}
	
	// *************************************************************
	// upon confirmation, call a Bank controller via .ajax 
	// to delete one or more Bank models
	// *************************************************************
	function deleteBank()
	{
		var ids 	= getSelectedIdsFromGrid( jQuery('#BankGridTableId'), 'bankId' );
		if ( ids == null )
		{
			BootstrapDialog.alert('Please first select a Bank');
		}
		else
		{
	    	BootstrapDialog.confirm
	    	({
	        	title: 'WARNING',
	        	message: 'Are you sure?',
	            type: BootstrapDialog.TYPE_WARNING, // <-- Default value is BootstrapDialog.TYPE_PRIMARY
	            closable: true, // <-- Default value is false
	            btnCancelLabel: 'No', // <-- Default value is 'Cancel',
	            btnOKLabel: 'Yes', // <-- Default value is 'OK',
	            btnOKClass: 'btn-warning', // <-- If you didn't specify it, dialog type will be used,
	            callback: function(result) 
	            {
	                // result will be true if button was click, while it will be false if 
	                // users close the dialog directly.
	                if(result) 
	                {
	                	var url = '@Html.Raw(ViewData["deleteUrl"])';
	                	
	                	if ( url == null || url == '' || url == 'null' )
	                		url = '/Bank/delete?a=a';
	                	
	                	for (i = 0; i < ids.length; i++)
	                	{
	                		url = url + '&childIds=' + ids[i];
	                	}

						console.log( 'delete url is ' + url );
	                							
						jQuery.ajax(
						{
					  		url: url,
					  		dataType: 'json',
						}).always(function( data ) 
						{
							populateBankGrid()
						});		
	                }
	            }
	    	});
	    }
	}

	// *************************************************************
	// handles calling the multi-select screen, providing details
	// on both the source list and the receiver list
	// *************************************************************
	function addBankFromAllList()
	{
		var sourceUrl	= '/Bank/loadAll';
		var modelUrl 	= '@Html.Raw(ViewData["modelUrl"])';
		var value 		= 'bankId';
		var text 		= 'accounts';
		var roleName	= '@Html.Raw(ViewData["roleName"])';
		
		if ( roleName == null || roleName == 'null' || roleName == null )
			roleName = 'All-Bank';
			
		multiselect( sourceUrl, modelUrl, roleName, value, text, assignBankSelectionsFromAllList );  
	}

	// *************************************************************
	// helper function to assign the provided children ids to the
	// Bank as the parent
	// *************************************************************
	function assignBankSelectionsFromAllList( ids )
	{
		var url = '@Html.Raw(ViewData["parentUrl"])';
		for (i = 0; i < ids.length; i++)
    	{
    		url = url + '&childIds=' + ids[i];
    	}
				
		jQuery.ajax(
		{
	  		url: url,
	  		dataType: 'json',
		}).always(function( data ) 
		{
			populateBankGrid()
		});		
	}
	
	// *************************************************************
	// populate the grid triggering a reload event
	// *************************************************************
	function populateBankGrid()
	{
		$('#loadingDivId').show();
		$('#BankGridTableId').trigger( 'reloadGrid' );
		$('#loadingDivId').hide();			
	}
	
</script>

<!-- grid table declaration -->
<table id="BankGridTableId"></table>

<div>
  <br>
  <table
    <tr>
      <td>
      
        <!-- grid refresh button -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="refresh" onclick="populateBankGrid()" >
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-refresh">
		      </span>
			</button>
		</a>
		
		<!-- button to add a new Bank model -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="add Bank" onclick="addBank()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-plus">
		      </span>
			</button>
		</a>
		
		<!-- button to edit a selected Bank model -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="edit Bank" onclick="editBank()" >
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-pencil">
		      </span>
			</button>
		</a>
		
		<!-- button to delete one or more selected Bank models -->
		<a href="#" data-toggle="tooltip" data-placement="below" title="delete Bank" onclick="deleteBank()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-trash">
		      </span>
			</button>
		</a>
	  </td>
	  <td>
	  	<!-- button to add one or more existing Bank models -->
		<div id="dualListButtonForBankDivId" style="display:none">
		  <a href="#" data-toggle="tooltip" data-placement="below" title="add Bank From List" onclick="addBankFromAllList()">
		    <button type="button" class="btn btn-info btn-xs">
		      <span class="glyphicon glyphicon-th-list">
		      </span>
			</button>
		  </a>
		<div>
 	  </td>
 	</tr>
  </table>

  <!-- the indicator that the grid's contents are loading -->
  <div id="loadingDivId" style="display:none;color:black">
    loading all Bank entities...<image src="../img/load_new.gif" width=48 height=48/>
  </div>
  				  				  
</div>

</html>